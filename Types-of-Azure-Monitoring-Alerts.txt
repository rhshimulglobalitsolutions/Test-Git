Azure Monitor Alerts
Alerts help you detect and address issues before users notice them by proactively notifying you when Azure Monitor 
data indicates that there may be a problem with your infrastructure or application. You can alert on any metric 
or log data source in the Azure Monitor data platform.

An alert rule monitors your telemetry and captures a signal that indicates that something is happening on the 
specified resource. The alert rule captures the signal and checks to see if the signal meets the criteria of the 
condition. If the conditions are met, an alert is triggered, which initiates the associated action group and 
updates the state of the alert.

An alert rule combined with 
1. The resources to be monitored and 
2. The signal or telemetry from the resource Conditions

If you're monitoring more than one resource, the condition is evaluated separately for each of the resources and 
alerts are fired for each resource separately.Once an alert is triggered, the alert is made up of then those 
are performing:
1. Alert processing rules 
2. Alert conditions
3. Action groups
4. The user response

Mainly There are four types of Azure Monitor Alerts.
1. Metric alerts	
2. Log alerts 
3. Activity log alerts 
4. Smart detection alerts

And another type is Prometheus alerts.

1. Metric alerts:
A metric alert rule monitors a resource by evaluating conditions on the resource metrics at regular intervals. If 
the conditions are met, an alert is fired. A metric time-series is a series of metric values captured over a 
period. We recommend using metric alerts if the data you want to monitor is available in metric data.

Metric alert rules include these features:
 Multiple conditions on an alert rule for a single resource.
 Add granularity by monitoring multiple metric dimensions.
 Dynamic thresholds driven by machine learning.
 Configure if metric alerts are stateful or stateless. But stateful by default.

The target of the metric alert rule can be:
 A single resource, such as a VM. See this article for supported resource types.
 Multiple resources of the same type in the same Azure region, such as a resource group.

Narrow the target using Dimensions:
Dimensions are name-value pairs that contain more data about the metric value. Using dimensions allows you to 
filter the metrics and monitor specific time-series, instead of monitoring the aggregate of all the dimensional 
values.
 Multi-resource metric alerts are not supported for the following scenarios:
 Alerting on virtual machines' guest metrics
 Alerting on virtual machines' network metrics


2. Log alerts:
A log alert rule monitors a resource by using a Log Analytics query to evaluate resource logs at a set frequency. 
If the conditions are met, an alert is fired. Because you can use Log Analytics queries, you can perform advanced 
logic operations on your data and use the robust KQL features to manipulate log data.

The target of the log alert rule can be:
 A single resource, such as a VM.
 Multiple resources of the same type in the same Azure region, such as a resource group. This is currently 
   available for selected resource types.
 Multiple resources using cross-resource query.

Log alerts can measure two different things, which can be used for different monitoring scenarios:
 Table rows: The number of rows returned can be used to work with events such as Windows event logs, syslog, 
   application exceptions.
 Calculation of a numeric column: Calculations based on any numeric column can be used to include any number of 
   resources. For example, CPU percentage.
You can configure if log alerts are stateful or stateless.

 Log alerts work best when you are trying to detect specific data in the logs, as opposed to when you are trying 
to detect a lack of data in the logs.  To avoid misfires when you are trying to detect a lack of data in the logs, 
consider using metric alerts. You can send data to the metric store from logs using metric alerts for logs.



3. Activity log alerts:
Activity logs provide auditing of all actions that occurred on resources. Use activity log alerts to be alerted 
when a specific event happens to a resource, for example, a restart, a shutdown, or the creation or deletion of a 
resource.

You may want to use activity log alerts for these types of scenarios:
 When a specific operation occurs on resources in a specific resource group or subscription. For example, you 
   may want to be notified when:
 Any virtual machine in a production resource group is deleted.
 Any new roles are assigned to a user in your subscription.
 A service health event occurs. Service health events include notifications of incidents and maintenance events 
   that apply to resources in your subscription.

You can create an activity log alert on:
 Any of the activity log event categories, other than on alert events.
 Any activity log event in top-level property in the JSON object.
Activity log alert rules are Azure resources, so they can be created by using an Azure Resource Manager template. 
Also, updated, or deleted in the Azure portal.
This alert only monitors events in the subscription in which the alert is created.

There are two types of Activity log alerts.
I. Service Health alerts: Service Health alerts are a type of activity alert. Service Health  
let’s you know about outages, planned maintenance activities, and other health advisories because the 
authenticated Service Health experience knows which services and resources you currently use.
The best way to use Service Health is to set up Service Health alerts to notify you using your preferred 
communication channels when service issues, planned maintenance, or other changes may affect the Azure services 
and regions you use.

II. Resource Health alerts: Resource Health alerts are a type of activity alert. Resource
Health helps you diagnose and get support for service problems that affect your Azure resources. It reports on the 
current and past health of your resources. Resource Health relies on signals from different Azure services to 
assess whether a resource is healthy. If a resource is unhealthy, Resource Health analyzes additional information 
to determine the source of the problem. It also reports on actions that Microsoft is taking to fix the problem and
identifies things that you can do to address it.


4. Smart Detection alerts:
After setting up Application Insights for your project, when your app generates a certain minimum amount of data,  
Smart Detection takes 24 hours to learn the normal behavior of your app. Your app's performance has a typical 
pattern of behavior. Some requests or dependency calls will be more prone to failure than others; and the overall  
failure rate may go up as load increases. Smart Detection uses machine learning to find these anomalies. Smart 
Detection monitors the data received from your app, and in particular the failure rates. Application Insights 
automatically alerts you in near real time if your web app experiences an abnormal rise in the rate of failed 
requests.

As data comes into Application Insights from your web app, Smart Detection compares the current behavior with the 
patterns seen over the past few days. If there's an abnormal rise in failure rate compared to previous performance,
an analysis is triggered. To help you triage and diagnose the problem, an analysis of the characteristics of the 
failures and related application data is provided in the alert details. There are also links to the Application 
Insights portal for further diagnosis. The feature needs no set-up nor configuration, as it uses machine learning 
algorithms to predict the normal failure rate.

While metric alerts tell you there might be a problem, Smart Detection starts the diagnostic work for you, 
performing much of the analysis you would otherwise have to do yourself. You get the results neatly packaged, 
helping you to get quickly to the root of the problem.
Smart detection works for web apps hosted in the cloud or on your own servers that generate application requests 
or dependency data.


Prometheus alerts:
Prometheus alerts are based on metric values stored in Azure Monitor managed services for Prometheus. They fire 
when the results of a PromQL query resolves to true. Prometheus alerts are displayed and managed like other alert 
types when they fire, but they are configured with a Prometheus rule group.

	Azure Monitor managed service for Prometheus is intended for storing info. about 
service health of customer machines and applications. It is not intended for storing any data classified as 
Personal Identifiable Info. (PII) or End User Identifiable Info. (EUII). We strongly recommend that you do not 
send any sensitive info. into Azure Monitor managed service for Prometheus fields like metric names, label names, 
or label values.

